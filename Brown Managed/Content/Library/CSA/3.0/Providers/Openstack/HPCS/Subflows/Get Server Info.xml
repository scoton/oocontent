<?xml version="1.0" encoding="UTF-8"?>
<flow id="29b15cae-a108-4206-a3ea-e2b43239d5fd">
  <descriptionCdata><![CDATA[29b15cae-a108-4206-a3ea-e2b43239d5fd.01946886-fca2-4f61-895f-4578f8600bdf.description=<pre>\nAccepts an object in the JavaScript Object Notation format (JSON) and\nreturns a value for the specified key.\n\nThe JSON format encodes objects as a set of unordered key/value pairs, which is\nsimilar to a structure or map in other programming languages.  For example,\n   { "city" \: "Palo Alto", \n     "state" \: "CA" }\nis an object with two elements one with the name "city" having the value "Palo\nAlto", and the other being the name "state" with the value "CA". This operation would \nreturn "Palo Alto" if user enters "city" as a key.\n\nIf the input object contains JSON array, array index can be used in the key input. For example, \n{ "location"\: [\n      {"city"\: "Roseville", "country"\: "United States"},\n      {"city"\: "Cluj", "country"\: "Romania"},\n      {"city"\: "Yehud", "country"\: "Israel"}]    \n}\nThe operation would return "Roseville" if user enters "location[0].city" as a key.\n\nJavaScript objects are useful for representing structured data, and are\nespecially when used within an array.  For example, an operation that retrieves\na set of incidents from an external system may return the entire list in one\narray of incident objects.  The description of the enclosing folder,\n/Library/Utility Operations/Container/JavaScript Objects has more examples, and\nthe JSON format is described completely at http\://www.json.org.\n\nInputs\n\n   object\n      The JavaScript object.  \n      The operation will return a failure if it is not a JavaScript object.\n\n   key\n      The key in the object to get the value of.\n\nResponses\n\n   success\n      The value was successfully returned for the specified key. \n\n   failure\n      There was some error in processing the object, most likely because the\n      object is not in valid JavaScript Object Notation or the specified key does not exist in the object.  \n      You may wish to use a tool such as http\://www.jsonlint.com/ to help diagnose problems with\n      JavaScript Object Notation.\n\nOutputs\n\n   The primary output will be the value for the specified key in the object.\n\nNote\n\n    If the value in JSON object is in scientific notation, the returned output will be converted to an equivalent decimal number. Ex, 2.9e+1 will be converted to 29.\n</pre>
29b15cae-a108-4206-a3ea-e2b43239d5fd.0208212d-4783-4753-9563-2335317dafab.description=<pre>\nAccepts an object in the JavaScript Object Notation format (JSON) and\nreturns a value for the specified key.\n\nThe JSON format encodes objects as a set of unordered key/value pairs, which is\nsimilar to a structure or map in other programming languages.  For example,\n   { "city" \: "Palo Alto", \n     "state" \: "CA" }\nis an object with two elements one with the name "city" having the value "Palo\nAlto", and the other being the name "state" with the value "CA". This operation would \nreturn "Palo Alto" if user enters "city" as a key.\n\nIf the input object contains JSON array, array index can be used in the key input. For example, \n{ "location"\: [\n      {"city"\: "Roseville", "country"\: "United States"},\n      {"city"\: "Cluj", "country"\: "Romania"},\n      {"city"\: "Yehud", "country"\: "Israel"}]    \n}\nThe operation would return "Roseville" if user enters "location[0].city" as a key.\n\nJavaScript objects are useful for representing structured data, and are\nespecially when used within an array.  For example, an operation that retrieves\na set of incidents from an external system may return the entire list in one\narray of incident objects.  The description of the enclosing folder,\n/Library/Utility Operations/Container/JavaScript Objects has more examples, and\nthe JSON format is described completely at http\://www.json.org.\n\nInputs\n\n   object\n      The JavaScript object.  \n      The operation will return a failure if it is not a JavaScript object.\n\n   key\n      The key in the object to get the value of.\n\nResponses\n\n   success\n      The value was successfully returned for the specified key. \n\n   failure\n      There was some error in processing the object, most likely because the\n      object is not in valid JavaScript Object Notation or the specified key does not exist in the object.  \n      You may wish to use a tool such as http\://www.jsonlint.com/ to help diagnose problems with\n      JavaScript Object Notation.\n\nOutputs\n\n   The primary output will be the value for the specified key in the object.\n\nNote\n\n    If the value in JSON object is in scientific notation, the returned output will be converted to an equivalent decimal number. Ex, 2.9e+1 will be converted to 29.\n</pre>
29b15cae-a108-4206-a3ea-e2b43239d5fd.55b5dc84-9622-4283-8829-4596d85c03c5.description=<pre>\nThis operation returns details of the specified flavor.\n\nInputs\:\n    computeEndpoint - The compute endpoint to use for the request. \nExample\: https\://az-1.region-a.geo-1.compute.hpcloudsvc.com/v1.1/28400914814935\n    flavorId - The flavor id to retrieve.\nExample\: 100\n    authToken - The authentication token to use for the request.\nExample\: HPAuth_4f3b5044e4b05c3dbefdee82\n    username - The username to use for authentication to the URL. For NTLM authentication, the required format is domain\\user.\n    password - The password to use for authentication to the URL.\n    authType - The authentication type that this operation uses when trying to execute the request on the target server.\nValid values\: basic, form, digest, ntlm, kerberos, anonymous (no authentication).\nDefault value\: anonymous - authentication not used when executing the request.\n    kerberosConfFile - The path to the Kerberos configuration file. If this input is empty the kdc (Key Distribution Center) and realm will get their values from the full domain name which is obtained from the url of the web server.\n    timeout - The number of milliseconds to wait for a connection to be established. This input should be assigned a value greater than or equal to zero. A timeout value of zero is an infinite timeout.\nDefault value\: 0.\n    socketTimeout - The number of milliseconds to wait for the data to be retrieved. This input should be assigned a value greater than or equal to zero. A socketTimeout value of zero is an infinite timeout.\nDefault value\: 0.\n    useCookies - If true, enables cookie tracking. Cookies will be stored between consecutive calls. This is a boolean input. If a non-boolean value is specified, it will take the default value.\nDefault value\: true.\n    followRedirects - If true, the GET command automatically follows redirects. This is a boolean input. If a non-boolean value is specified, it will take the default value.\nDefault value\: false.\n    proxy - A proxy to use when accessing the web site.\n    proxyPort - The port on the proxy to connect to.\n    proxyUsername - The username to use when connecting to the proxy.\n    proxyPassword - The password to use when connecting to the proxy.\n    encodeURL - If true, automatically encodes the URL. This is a boolean input. If a non-boolean value is specified, it will take the default value.\nDefault value\: false.\n    userAgent - The value that should be used if the HTTP header USER_AGENT has to be overridden.\n    characterSet - The character encoding that should be used for the HTTP Get request and response. \nDefault value\: UTF-8.\n    trustAllRoots - If true, enables weak security over SSL. A SSL certificate is trusted even if no trusted CA issued it.\nDefault value\: false.\n    keystore - URL of the keystore file or local path to it (e.g. %JAVA_HOME%/jre/lib/security/cacerts). It may be empty if HTTPS client  authentication is not to be used.\n    keystorePassword - Password to unlock the keystore.\n    trustKeystore - URL of the truststore file or local path to it (e.g. %JAVA_HOME%/jre/lib/security/cacerts). It may be empty if HTTPS server authentication is not to be used.\n    trustPassword - Password to unlock the truststore.\n    headerNamesList - A list containing the names of headers that should be used for the request.\nExample\: Accept,Content-Type\n    headerValuesList - A list containing the values of headers that should be used for the request. \nExample\: text/plain,application/x-www-form-urlencoded\n    queryNamesList - A list containing the names of query parameters that should be used for the request. \nExample\: parameterName1,parameterName2 \n    queryValuesList - A list containing the values of query parameters that should be used for the request. \nExample\: parameterValue1,parameterValue2\n    delimiter - A delimiter that separates the elements in the names and values lists.\nDefault value\:  (carriage return).\n\nResults\:\n    flavorDetails - A JSON array of objects describing a flavor. The JSON object contains the ID, name, ram, disk, vcpus and links for a flavor.\n\nResponses\:\n    success - The URL retrieved successfully.\n    failure - The URL could not be retrieved.\n\nNotes\:\nSee the HTTP Client Get operation for additional notes.\n</pre>
29b15cae-a108-4206-a3ea-e2b43239d5fd.6bf2654e-05ee-489f-a8c5-b9782de862c6.description=<pre>\nThis operation returns details of the specified image.\n\nInputs\:\n   computeEndpoint - The compute endpoint to use for the request. \nExample\: https\://az-1.region-a.geo-1.compute.hpcloudsvc.com/v1.1/28400914814935\n    imageId - The image id to retrieve.\nExample\: 1247\n    authToken - The authentication token to use for the request.\nExample\: HPAuth_4f3b5044e4b05c3dbefdee82\n    username - The username to use for authentication to the URL. For NTLM authentication, the required format is domain\\user.\n    password - The password to use for authentication to the URL.\n    authType - The authentication type that this operation uses when trying to execute the request on the target server.\nValid values\: basic, form, digest, ntlm, kerberos, anonymous (no authentication).\nDefault value\: anonymous - authentication not used when executing the request.\n    kerberosConfFile - The path to the Kerberos configuration file. If this input is empty the kdc (Key Distribution Center) and realm will get their values from the full domain name which is obtained from the url of the web server.\n    timeout - The number of milliseconds to wait for a connection to be established. This input should be assigned a value greater than or equal to zero. A timeout value of zero is an infinite timeout.\nDefault value\: 0.\n    socketTimeout - The number of milliseconds to wait for the data to be retrieved. This input should be assigned a value greater than or equal to zero. A socketTimeout value of zero is an infinite timeout.\nDefault value\: 0.\n    useCookies - If true, enables cookie tracking. Cookies will be stored between consecutive calls. This is a boolean input. If a non-boolean value is specified, it will take the default value.\nDefault value\: true.\n    followRedirects - If true, the GET command automatically follows redirects. This is a boolean input. If a non-boolean value is specified, it will take the default value.\nDefault value\: false.\n    proxy - A proxy to use when accessing the web site.\n    proxyPort - The port on the proxy to connect to.\n    proxyUsername - The username to use when connecting to the proxy.\n    proxyPassword - The password to use when connecting to the proxy.\n    encodeURL - If true, automatically encodes the URL. This is a boolean input. If a non-boolean value is specified, it will take the default value.\nDefault value\: false.\n    userAgent - The value that should be used if the HTTP header USER_AGENT has to be overridden.\n    characterSet - The character encoding that should be used for the HTTP Get request and response. \nDefault value\: UTF-8.\n    trustAllRoots - If true, enables weak security over SSL. A SSL certificate is trusted even if no trusted CA issued it.\nDefault value\: false.\n    keystore - URL of the keystore file or local path to it (e.g. %JAVA_HOME%/jre/lib/security/cacerts). It may be empty if HTTPS client  authentication is not to be used.\n    keystorePassword - Password to unlock the keystore.\n    trustKeystore - URL of the truststore file or local path to it (e.g. %JAVA_HOME%/jre/lib/security/cacerts). It may be empty if HTTPS server authentication is not to be used.\n    trustPassword - Password to unlock the truststore.\n    headerNamesList - A list containing the names of headers that should be used for the request.\nExample\: Accept,Content-Type\n    headerValuesList - A list containing the values of headers that should be used for the request. \nExample\: text/plain,application/x-www-form-urlencoded\n    queryNamesList - A list containing the names of query parameters that should be used for the request. \nExample\: parameterName1,parameterName2 \n    queryValuesList - A list containing the values of query parameters that should be used for the request. \nExample\: parameterValue1,parameterValue2\n    delimiter - A delimiter that separates the elements in the names and values lists.\nDefault value\:  (carriage return).\n\nResults\:\n    imageDetails - A JSON array of objects describing an image. The JSON object contains the ID, name, updated time, created time, tenant id, user id, and status of the image. It also contains the metadata and links for the image.\n\nResponses\:\n    success - The URL retrieved successfully.\n    failure - The URL could not be retrieved.\n\nNotes\:\nSee the HTTP Client Get operation for additional notes.\n</pre>
29b15cae-a108-4206-a3ea-e2b43239d5fd.9d746d6b-a277-415f-88f1-a042a0129f11.description=<pre>\nAccepts an object in the JavaScript Object Notation format (JSON) and\nreturns a value for the specified key.\n\nThe JSON format encodes objects as a set of unordered key/value pairs, which is\nsimilar to a structure or map in other programming languages.  For example,\n   { "city" \: "Palo Alto", \n     "state" \: "CA" }\nis an object with two elements one with the name "city" having the value "Palo\nAlto", and the other being the name "state" with the value "CA". This operation would \nreturn "Palo Alto" if user enters "city" as a key.\n\nIf the input object contains JSON array, array index can be used in the key input. For example, \n{ "location"\: [\n      {"city"\: "Roseville", "country"\: "United States"},\n      {"city"\: "Cluj", "country"\: "Romania"},\n      {"city"\: "Yehud", "country"\: "Israel"}]    \n}\nThe operation would return "Roseville" if user enters "location[0].city" as a key.\n\nJavaScript objects are useful for representing structured data, and are\nespecially when used within an array.  For example, an operation that retrieves\na set of incidents from an external system may return the entire list in one\narray of incident objects.  The description of the enclosing folder,\n/Library/Utility Operations/Container/JavaScript Objects has more examples, and\nthe JSON format is described completely at http\://www.json.org.\n\nInputs\n\n   object\n      The JavaScript object.  \n      The operation will return a failure if it is not a JavaScript object.\n\n   key\n      The key in the object to get the value of.\n\nResponses\n\n   success\n      The value was successfully returned for the specified key. \n\n   failure\n      There was some error in processing the object, most likely because the\n      object is not in valid JavaScript Object Notation or the specified key does not exist in the object.  \n      You may wish to use a tool such as http\://www.jsonlint.com/ to help diagnose problems with\n      JavaScript Object Notation.\n\nOutputs\n\n   The primary output will be the value for the specified key in the object.\n\nNote\n\n    If the value in JSON object is in scientific notation, the returned output will be converted to an equivalent decimal number. Ex, 2.9e+1 will be converted to 29.\n</pre>
29b15cae-a108-4206-a3ea-e2b43239d5fd.b5bb8c8b-f8a3-42fa-8822-cb8372ee12ac.description=<pre>\nIterates through a JavaScript array, i.e. a string value that contains an array\nin the JavaScript Object Notation format (JSON).  Each time that this operation\nis called it places the value of the current array element into the Result\noutput and advances the iterator to the array element.\n\nThe JSON format is basically a way to encode arrays and other values using\nJavaScript notation.  For arrays, this means that the values need to be\nsurrounded by square brackets, and each element in the array can be a string\n(which needs surrounding quotes), a number, true, false, null, or a nested array\nor object.  Commas are always used as delimiters between array elements, and\nthey can appear within string elements without confusion.  For example, the\nfollowing is a simple JSON array\:\n   [ "cat", "dog", "horse" ]\nNote that the equivalent OO list would be \n   cat,dog,horse\nThe benefits of JavaScript arrays are that delimiters are fixed and cannot be\nconfused with data, and that complex nesting of arrays and objects are\nsupported.  The description of the enclosing folder, /Library/Utility\nOperations/Container/JavaScript Objects has more examples, and the JSON format\nis described completely at http\://www.json.org.\n\nModifying the contents of the array during iteration is not generally supported,\nbut will be safe as long as the affected item(s) are beyond the current position\nof the iterator.  The iterator keeps track of where it is in the array by\nposition.  If items are added or removed to the list in a position preceding the\niterator, it may cause the iterator to return results that are not obvious.  For\nexample, if the array contains [ "a", "b", "c" ] and the iterator is positioned\non the second element, "b" and the first element is removed, then the iterator\nwill now be at the last element in the list, "c".\n\nThere is currently a limitation that a flow can only have one of these array\niterator steps active at a time without causing possible conflicts.  In other\nwords, if you need to iterate through a nested array, you will should use a\nsub-flow to process the inner array.  You may have two or more of these array\niterators in the same flow as long as each iterator reaches the end of its array\nbefore the next one begins.\n\nInputs\n\n   array\n      The JavaScript array that will be iterated through.  The operation will\n      return a failure if the array is not a JavaScript array; a normal OO list\n      is NOT a JavaScript array.\n\nResponses\n\n   has more\n      The iterator has not yet reached the end of the array. The Result output\n      will be populated with the value of the current element in the array, and\n      the iterator will advance to the next element in the array.\n\n   no more\n      The iterator has reached the end of the array, and there is no more data\n      to return.  The iterator will become undefined after this call, which\n      basically will reset it so that if called again, this operation will begin\n      another iteration at the beginning of the array.\n\n   failure\n      There was some error in iterating through the list, and the Result output\n      will contain information about the error.  This will occur if the input\n      array is not a valid JavaScript array.  For example, if presented with a\n      common list value such as a,b,c it will fail because it lacks the\n      enclosing brackets and the quotes around each string element.  You may\n      wish to use a tool such as http\://www.jsonlint.com/ to help diagnose\n      problems with JavaScript Object Notation.\n\nOutputs\n\n   Result\n      The current array element.  When incorporating this operation into a flow,\n      you should assign a meaningful result value from this field.  Note that\n      since JavaScript arrays may contain nested arrays or other objects, the\n      value returned in Result may also require further processing.\n\n</pre>\n
29b15cae-a108-4206-a3ea-e2b43239d5fd.e84e3ecb-f576-4d06-b7a8-452afc99aa0d.description=<pre>\nThis operation returns details of the specified server associated with an account.\n\nInputs\:\n    computeEndpoint - The compute endpoint to use for the request. \nExample\: https\://az-1.region-a.geo-1.compute.hpcloudsvc.com/v1.1/28400914814935\n    serverId - The server id to retrieve.\nExample\: 55932\n    authToken - The authentication token to use for the request.\nExample\: HPAuth_4f3b5044e4b05c3dbefdee82\n    username - The username to use for authentication to the URL. For NTLM authentication, the required format is domain\\user.\n    password - The password to use for authentication to the URL.\n    authType - The authentication type that this operation uses when trying to execute the request on the target server.\nValid values\: basic, form, digest, ntlm, kerberos, anonymous (no authentication).\nDefault value\: anonymous - authentication not used when executing the request.\n    kerberosConfFile - The path to the Kerberos configuration file. If this input is empty the kdc (Key Distribution Center) and realm will get their values from the full domain name which is obtained from the url of the web server.\n    timeout - The number of milliseconds to wait for a connection to be established. This input should be assigned a value greater than or equal to zero. A timeout value of zero is an infinite timeout.\nDefault value\: 0.\n    socketTimeout - The number of milliseconds to wait for the data to be retrieved. This input should be assigned a value greater than or equal to zero. A socketTimeout value of zero is an infinite timeout.\nDefault value\: 0.\n    useCookies - If true, enables cookie tracking. Cookies will be stored between consecutive calls. This is a boolean input. If a non-boolean value is specified, it will take the default value.\nDefault value\: true.\n    followRedirects - If true, the GET command automatically follows redirects. This is a boolean input. If a non-boolean value is specified, it will take the default value.\nDefault value\: false.\n    proxy - A proxy to use when accessing the web site.\n    proxyPort - The port on the proxy to connect to.\n    proxyUsername - The username to use when connecting to the proxy.\n    proxyPassword - The password to use when connecting to the proxy.\n    encodeURL - If true, automatically encodes the URL. This is a boolean input. If a non-boolean value is specified, it will take the default value.\nDefault value\: false.\n    userAgent - The value that should be used if the HTTP header USER_AGENT has to be overridden.\n    characterSet - The character encoding that should be used for the HTTP Get request and response. \nDefault value\: UTF-8.\n    trustAllRoots - If true, enables weak security over SSL. A SSL certificate is trusted even if no trusted CA issued it.\nDefault value\: false.\n    keystore - URL of the keystore file or local path to it (e.g. %JAVA_HOME%/jre/lib/security/cacerts). It may be empty if HTTPS client  authentication is not to be used.\n    keystorePassword - Password to unlock the keystore.\n    trustKeystore - URL of the truststore file or local path to it (e.g. %JAVA_HOME%/jre/lib/security/cacerts). It may be empty if HTTPS server authentication is not to be used.\n    trustPassword - Password to unlock the truststore.\n    headerNamesList - A list containing the names of headers that should be used for the request.\nExample\: Accept,Content-Type\n    headerValuesList - A list containing the values of headers that should be used for the request. \nExample\: text/plain,application/x-www-form-urlencoded\n    queryNamesList - A list containing the names of query parameters that should be used for the request. \nExample\: parameterName1,parameterName2 \n    queryValuesList - A list containing the values of query parameters that should be used for the request. \nExample\: parameterValue1,parameterValue2\n    delimiter - A delimiter that separates the elements in the names and values lists.\nDefault value\:  (carriage return).\n\nResults\:\n    serverDetails - A JSON array of objects describing a server. The JSON object contains the name, updated time, created time, tenant id, access IPs, flavor and image details. It also contains the metadata, addresses and links for the server.\n\nResponses\:\n    success - The URL retrieved successfully.\n    failure - The URL could not be retrieved.\n\nNotes\:\nSee the HTTP Client Get operation for additional notes.\n</pre>
29b15cae-a108-4206-a3ea-e2b43239d5fd.ea94f5b2-0371-4240-9101-74ad3a27e0d1.description=<pre>\nAccepts an object in the JavaScript Object Notation format (JSON) and\nreturns a value for the specified key.\n\nThe JSON format encodes objects as a set of unordered key/value pairs, which is\nsimilar to a structure or map in other programming languages.  For example,\n   { "city" \: "Palo Alto", \n     "state" \: "CA" }\nis an object with two elements one with the name "city" having the value "Palo\nAlto", and the other being the name "state" with the value "CA". This operation would \nreturn "Palo Alto" if user enters "city" as a key.\n\nIf the input object contains JSON array, array index can be used in the key input. For example, \n{ "location"\: [\n      {"city"\: "Roseville", "country"\: "United States"},\n      {"city"\: "Cluj", "country"\: "Romania"},\n      {"city"\: "Yehud", "country"\: "Israel"}]    \n}\nThe operation would return "Roseville" if user enters "location[0].city" as a key.\n\nJavaScript objects are useful for representing structured data, and are\nespecially when used within an array.  For example, an operation that retrieves\na set of incidents from an external system may return the entire list in one\narray of incident objects.  The description of the enclosing folder,\n/Library/Utility Operations/Container/JavaScript Objects has more examples, and\nthe JSON format is described completely at http\://www.json.org.\n\nInputs\n\n   object\n      The JavaScript object.  \n      The operation will return a failure if it is not a JavaScript object.\n\n   key\n      The key in the object to get the value of.\n\nResponses\n\n   success\n      The value was successfully returned for the specified key. \n\n   failure\n      There was some error in processing the object, most likely because the\n      object is not in valid JavaScript Object Notation or the specified key does not exist in the object.  \n      You may wish to use a tool such as http\://www.jsonlint.com/ to help diagnose problems with\n      JavaScript Object Notation.\n\nOutputs\n\n   The primary output will be the value for the specified key in the object.\n\nNote\n\n    If the value in JSON object is in scientific notation, the returned output will be converted to an equivalent decimal number. Ex, 2.9e+1 will be converted to 29.\n</pre>
]]></descriptionCdata>
  <annotation></annotation>
  <name>Get Server Info</name>
  <categories/>
  <inputs>
    <userInputBinding id="75eb9ccd-ee3b-4737-85e5-460dc76859d3">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>computeEndpoint</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="46a8398b-a942-4807-ba9c-b67f70e937ea">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>authToken</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="37af5137-e140-42d8-a2a3-e5db3e6c7eda">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>serverId</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="ba999423-fe81-44b0-a067-6e4acb224e7e">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>identityServiceEndpoint</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="4799269a-ac1a-4885-aa79-2c1fb29643d7">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>identityServiceUsername</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="7661f4d4-5571-41ae-821f-0acb3680282f">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>ENCRYPTED</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>identityServicePassword</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="83d7c26f-c7f7-47fc-aee7-ae1243540254">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>tenantId</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="40b3cc3f-3afc-4457-a3c0-7c5aad61dd27">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>pnetwork</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
  </inputs>
  <possibleResponses>
    <opResponse id="8a322590-5a52-4d8a-a75f-25c90bde5b49">
      <annotation></annotation>
      <name>success</name>
      <isDefault>true</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="b2cb51e6-19a4-45d4-8193-0a43415ca7db">
      <annotation></annotation>
      <name>failure</name>
      <isDefault>false</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions>
    <expression id="2d9d9a14-ab3f-430b-9a7c-7f2349c846bf">
      <annotation></annotation>
      <name>hardDiskInGB</name>
      <fieldName>hardDiskInGB</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
    <expression id="7ace95a6-8741-4439-8155-b03d17af5d47">
      <annotation></annotation>
      <name>securityGroup</name>
      <fieldName>serverSecurityGroup</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
    <expression id="66c65a6d-0d06-475e-adcd-72013ae59876">
      <annotation></annotation>
      <name>status</name>
      <fieldName>serverStatus</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
    <expression id="00d5ee31-ec2e-4e10-9b54-b9da31f3f96d">
      <annotation></annotation>
      <name>flavorId</name>
      <fieldName>flavorRef</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
    <expression id="f62d2f03-9bdc-49ad-b7ba-753ed3e57eb4">
      <annotation></annotation>
      <name>metadata</name>
      <fieldName>serverMetadata</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
    <expression id="3efdda1a-d4ac-4add-bd65-b77bd8e9af0a">
      <annotation></annotation>
      <name>imageId</name>
      <fieldName>imageId</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
    <expression id="3d660cfe-ccb3-41ae-833b-6f86fe90ba79">
      <annotation></annotation>
      <name>UUID</name>
      <fieldName>serverUUID</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
    <expression id="63efaf2a-db57-42cb-a373-9941908a3719">
      <annotation></annotation>
      <name>vcpus</name>
      <fieldName>vcpus</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
    <expression id="c15c8372-75b7-43da-a8f4-626c9a496977">
      <annotation></annotation>
      <name>FailureMessage</name>
      <fieldName>FailureMessage</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
    <expression id="23775eec-e1e5-4d11-ab4a-d630afc29292">
      <annotation></annotation>
      <name>flavorName</name>
      <fieldName>flavorName</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
    <expression id="1e4ca9fd-b448-4249-90fe-82e60ab5bea6">
      <annotation></annotation>
      <name>keyPair</name>
      <fieldName>serverKeyPair</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
    <expression id="8d68c42d-4b1a-4e20-8c9a-9de6ee17fcc3">
      <annotation></annotation>
      <name>ramInGB</name>
      <fieldName>ramInGB</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
    <expression id="b1030fc4-f4c6-40cb-97db-118ba48b8926">
      <annotation></annotation>
      <name>computeEndpoint</name>
      <fieldName>computeEndpoint</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
    <expression id="c32856fa-8b7f-4604-88ee-599e634ad1a1">
      <annotation></annotation>
      <name>imageName</name>
      <fieldName>imageName</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
    <expression id="574a482d-0ebb-4df4-a158-5de8d8f35a0f">
      <annotation></annotation>
      <name>authToken</name>
      <fieldName>authToken</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
    <expression id="4839b6d1-74b2-4e43-ad9b-450661c636fd">
      <annotation></annotation>
      <name>name</name>
      <fieldName>serverName</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
    <expression id="ff92d2fb-2189-4d98-9b40-18d59f0a4080">
      <annotation></annotation>
      <name>floatingIP</name>
      <fieldName>floatingIP</fieldName>
      <sourceType>RAWRESULT</sourceType>
      <filters/>
    </expression>
  </availableResultExpressions>
  <resultExpression id="1bdde139-19f8-4734-b081-eb69d2becdc9">
    <annotation></annotation>
    <name>FailureMessage</name>
    <fieldName>serverDetails</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="d57c9298-86ad-4a84-a6a3-f72b5fe50cf6">
    <baseIcon>flow.png</baseIcon>
    <basePath>System</basePath>
    <readOnly>false</readOnly>
    <layers/>
  </iconSpec>
  <callouts/>
  <checkPointFlow>true</checkPointFlow>
  <compatibleRuntimeContext>false</compatibleRuntimeContext>
  <historyCheckPointFlow>true</historyCheckPointFlow>
  <steps>
    <step id="e84e3ecb-f576-4d06-b7a8-452afc99aa0d">
      <annotation>29b15cae-a108-4206-a3ea-e2b43239d5fd.e84e3ecb-f576-4d06-b7a8-452afc99aa0d.description</annotation>
      <name>Get Server Details</name>
      <bounds>
        <x>50.0</x>
        <y>45.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <userInputBinding id="7cac4b42-9c0a-48b9-bd12-f80e8328b2aa">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>computeEndpoint</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
          <prompt></prompt>
          <isMultiSelect>false</isMultiSelect>
          <sourceDelimiter>|</sourceDelimiter>
        </userInputBinding>
        <userInputBinding id="792e7803-b9a8-472d-91e0-4ea410192687">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>serverId</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
          <prompt></prompt>
          <isMultiSelect>false</isMultiSelect>
          <sourceDelimiter>|</sourceDelimiter>
        </userInputBinding>
        <userInputBinding id="908bbe1b-944b-4524-8b24-acff575e6427">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>authToken</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
          <prompt></prompt>
          <isMultiSelect>false</isMultiSelect>
          <sourceDelimiter>|</sourceDelimiter>
        </userInputBinding>
        <staticBinding id="99ecbaa7-7ef5-4a94-a6db-8000cf6d81c7">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>username</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="22f08056-b7cf-41bc-bc88-b1047c2c4916">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>ENCRYPTED</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>password</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="a7cde09a-8c2c-4d7e-bf1a-3c12c4da6246">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>authType</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="79eb3c51-47d9-4138-a5b0-63da5776e022">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>timeout</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="c73a5ab1-0f8c-4b40-ac2f-3f44409ac6bb">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>useCookies</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="d3428bf2-12c8-47f4-b418-459f84c1714e">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>followRedirects</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="cbf99816-0d70-4454-a6fe-151a70babf59">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>proxy</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="1c5609f2-279e-4c76-8de3-46a560e0c21c">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>proxyPort</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="e9f990e4-f5b4-4dd8-9f73-59c0e35f65b1">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>proxyUsername</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="98d5bad0-a2d7-4924-b3f8-e37397cdda40">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>ENCRYPTED</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>proxyPassword</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="dfb49488-4107-4239-9539-18b5828f352e">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>encodeURL</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="c74219d7-0520-4c1f-848d-af0350107089">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>userAgent</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="ffdc3744-878a-468f-8198-ca6781658d4c">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>characterSet</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="ae3f95b1-67c4-48a7-8c36-9c7ac6c9d5ad">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>trustAllRoots</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="22ad407a-a331-445d-859b-c958add4901b">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>keystore</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="f9aeae15-d607-4177-be11-74ff6f7cdf6b">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>ENCRYPTED</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>keystorePassword</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="4cd00e98-97be-49f3-ac0e-01c25794ebb1">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>trustKeystore</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="e0a70480-800b-4d4f-a21e-c75e30acc400">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>ENCRYPTED</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>trustPassword</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="bf1349f7-6f9e-44db-aace-462b942c9322">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>kerberosConfFile</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="a1cccdf3-352a-48dc-af00-def974e02bf2">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>socketTimeout</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="d80bb1d0-2578-45be-9526-ef70c3ca37a5">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>headerNamesList</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="19f0af6b-b2ea-4de8-9145-826b5f48d310">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>headerValuesList</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="02c76801-85cd-48fc-b4b7-844f8a08be65">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>queryNamesList</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="3f9ea370-f737-4bfb-86b0-982b34c860a4">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>queryValuesList</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="cbb1824e-aad8-491c-9a39-b7864e815d3b">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>delimiter</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="b4f27dde-0cd2-43ad-b2fe-7dd65b495dc9">
          <annotation></annotation>
          <assignFromContext>false</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>errorMessage</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="d5fce0f0-8f8b-47e7-b0e9-c097804555ba">
          <annotation></annotation>
          <name>success</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>55b5dc84-9622-4283-8829-4596d85c03c5</refId>
          </destination>
          <source>
            <refId>e84e3ecb-f576-4d06-b7a8-452afc99aa0d</refId>
          </source>
          <positions>
            <point>
              <x>280.0</x>
              <y>98.0</y>
            </point>
            <point>
              <x>277.0</x>
              <y>226.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>705.8694621553817</x>
            <y>0.5006995128027686</y>
          </labelPosition>
        </transition>
        <transition id="0b5e22df-237c-45bf-8369-fd48664d5d87">
          <annotation></annotation>
          <name>failure</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>4adc2d85-0b6a-4dda-9b47-e91bb833eef7</refId>
          </destination>
          <source>
            <refId>e84e3ecb-f576-4d06-b7a8-452afc99aa0d</refId>
          </source>
          <positions>
            <point>
              <x>100.0</x>
              <y>79.0</y>
            </point>
            <point>
              <x>624.0</x>
              <y>77.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>69d2521c-ebbd-422d-8526-a047735af7ab</refId>
      </opRef>
      <assignments>
        <flowVariableAssignment id="249373ee-4bee-4799-be44-703bae44d430">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>serverResult</contextKey>
          <expression id="cd090137-9437-4142-bf06-070d1f7358f6">
            <annotation></annotation>
            <name>Result Field: Result</name>
            <fieldName>Result</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="8c193bb0-f896-4198-bfe0-b07e3d0d9264">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>serverKeyPair</contextKey>
          <expression id="cdd92ca8-5086-4c4e-801f-8aeffaa38e2a">
            <annotation></annotation>
            <name>Result: serverDetails</name>
            <fieldName>serverDetails</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters>
              <scriptletFilter id="ff6dca59-da93-4e06-b3c0-ef9e013e16c6">
                <annotation></annotation>
                <name>Scriptlet</name>
                <scriptlet id="9c408e6e-d19a-4c15-a096-98f01c5c3075">
                  <annotation></annotation>
                  <name>default</name>
                  <script>// One-liner to define JSON parser and stringifier.  Minified version of http://www.json.org/json2.js
if(!this.JSON){this.JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;} if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+&apos;-&apos;+ f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;:null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};} var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;} function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);} switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;} v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}} v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+ mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}} if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;} rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);} return str(&apos;&apos;,{&apos;&apos;:value});};} if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}} return reviver.call(holder,key,value);} text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+ (&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});} if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;} throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

// default response
scriptletResponse = &quot;failure&quot;;
scriptletResult = &quot;&quot;;
    
try {
    // check to make sure scriptletInput is defined (if there was a failure, it might not be)
    if ((typeof scriptletInput == &quot;undefined&quot;) || (typeof scriptletInput == null) || (scriptletInput == &quot;&quot;) ){  
        // if scriptletInput is undefined, thow an empty exception, so the final scriptletResult will be empty
        throw &quot;&quot;;
    }

    jsObject = JSON.parse(scriptletInput);
    
    var serverKeyPair = jsObject.key_name; 

    if (typeof(serverKeyPair) != &apos;undefined&apos;){
        scriptletResult = serverKeyPair; 
        scriptletResponse = &quot;success&quot;;
    }
} 
catch (e){ 
    if (! (e instanceof SyntaxError))
        scriptletResult = &quot;&quot;+e;
}
</script>
                  <type>RHINO</type>
                </scriptlet>
              </scriptletFilter>
            </filters>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="95301916-708a-404d-a4bc-9ae226040ff6">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>serverUUID</contextKey>
          <expression id="e8afe5b1-9491-400d-8fb2-192a07a2d2fc">
            <annotation></annotation>
            <name>Result: serverDetails</name>
            <fieldName>serverDetails</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters>
              <scriptletFilter id="5c8dd0e1-0df3-4dc5-99fd-d58d7d40c79e">
                <annotation></annotation>
                <name>Scriptlet</name>
                <scriptlet id="3eaf5e89-9efb-43fa-8b77-10cba16ad6e9">
                  <annotation></annotation>
                  <name>default</name>
                  <script>// One-liner to define JSON parser and stringifier.  Minified version of http://www.json.org/json2.js
if(!this.JSON){this.JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;} if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+&apos;-&apos;+ f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;:null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};} var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;} function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);} switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;} v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}} v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+ mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}} if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;} rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);} return str(&apos;&apos;,{&apos;&apos;:value});};} if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}} return reviver.call(holder,key,value);} text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+ (&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});} if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;} throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

// default response
scriptletResponse = &quot;failure&quot;;
scriptletResult = &quot;&quot;;
    
try {
    // check to make sure scriptletInput is defined (if there was a failure, it might not be)
    if ((typeof scriptletInput == &quot;undefined&quot;) || (typeof scriptletInput == null) || (scriptletInput == &quot;&quot;) ){  
        // if scriptletInput is undefined, thow an empty exception, so the final scriptletResult will be empty
        throw &quot;&quot;;
    }

    jsObject = JSON.parse(scriptletInput);
    
    var serverUUID = jsObject.uuid; 

    if (typeof(serverUUID) != &apos;undefined&apos;){
        scriptletResult = serverUUID; 
        scriptletResponse = &quot;success&quot;;
    }
} 
catch (e){ 
    if (! (e instanceof SyntaxError))
        scriptletResult = &quot;&quot;+e;
}
</script>
                  <type>RHINO</type>
                </scriptlet>
              </scriptletFilter>
            </filters>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="0c9d50fa-310e-48df-9682-0f2d01d1b2b9">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>authToken</contextKey>
          <expression id="89b780a9-e65c-4f21-b8e3-22bf7969b0a6">
            <annotation></annotation>
            <name>Input: authToken</name>
            <fieldName>authToken</fieldName>
            <sourceType>INPUT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="20df4762-a005-4f4b-9873-1a9a2e246197">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>errorMessage</contextKey>
          <expression id="7a460e50-7cdc-4be0-9a2c-561249561fd9">
            <annotation></annotation>
            <name>Result Field: FailureMessage</name>
            <fieldName>FailureMessage</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="034b3f51-528d-494a-a817-d7ed0864a7ea">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>FailureMessage</contextKey>
          <expression id="a157d0f0-ce1d-4553-ad9e-d1525a4f4d3b">
            <annotation></annotation>
            <name>Result Field: FailureMessage</name>
            <fieldName>FailureMessage</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="5d71e3de-30cb-4219-a63a-d4ff227236b3">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>serverFlavor</contextKey>
          <expression id="f52f6d08-d4aa-4ec3-9bba-471a975bfe83">
            <annotation></annotation>
            <name>Result: serverDetails</name>
            <fieldName>serverDetails</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters>
              <scriptletFilter id="3f062fb9-8dee-43bb-a81a-4dd5dbf68536">
                <annotation></annotation>
                <name>Scriptlet</name>
                <scriptlet id="3f41bcbd-3289-4b31-805d-41955a074183">
                  <annotation></annotation>
                  <name>default</name>
                  <script>// One-liner to define JSON parser and stringifier.  Minified version of http://www.json.org/json2.js
if(!this.JSON){this.JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;} if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+&apos;-&apos;+ f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;:null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};} var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;} function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);} switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;} v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}} v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+ mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}} if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;} rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);} return str(&apos;&apos;,{&apos;&apos;:value});};} if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}} return reviver.call(holder,key,value);} text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+ (&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});} if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;} throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

// default response
scriptletResponse = &quot;failure&quot;;
scriptletResult = &quot;&quot;;
    
try {
    // check to make sure scriptletInput is defined (if there was a failure, it might not be)
    if ((typeof scriptletInput == &quot;undefined&quot;) || (typeof scriptletInput == null) || (scriptletInput == &quot;&quot;) ){  
        // if scriptletInput is undefined, thow an empty exception, so the final scriptletResult will be empty
        throw &quot;&quot;;
    }

    jsObject = JSON.parse(scriptletInput);
    
    var serverFlavorId = jsObject.flavor.id; 

    if (typeof(serverFlavorId) != &apos;undefined&apos;){
        scriptletResult = serverFlavorId; 
        scriptletResponse = &quot;success&quot;;
    }
} 
catch (e){ 
    if (! (e instanceof SyntaxError))
        scriptletResult = &quot;&quot;+e;
}
</script>
                  <type>RHINO</type>
                </scriptlet>
              </scriptletFilter>
            </filters>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="09aa90c9-4a71-4930-ae83-ced7b97eda03">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>serverMetadata</contextKey>
          <expression id="0b6d81b3-71c4-43d7-a54b-5408b8060d8a">
            <annotation></annotation>
            <name>Result: serverDetails</name>
            <fieldName>serverDetails</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters>
              <scriptletFilter id="47bd04da-4b90-474c-b60c-efbbae667444">
                <annotation></annotation>
                <name>Scriptlet</name>
                <scriptlet id="4faa287a-97f7-42c5-8ca4-987b187ad935">
                  <annotation></annotation>
                  <name>default</name>
                  <script>// One-liner to define JSON parser and stringifier.  Minified version of http://www.json.org/json2.js
if(!this.JSON){this.JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;} if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+&apos;-&apos;+ f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;:null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};} var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;} function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);} switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;} v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}} v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+ mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}} if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;} rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);} return str(&apos;&apos;,{&apos;&apos;:value});};} if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}} return reviver.call(holder,key,value);} text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+ (&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});} if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;} throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

// default response
scriptletResponse = &quot;failure&quot;;
scriptletResult = &quot;&quot;;
    
try {
    // check to make sure scriptletInput is defined (if there was a failure, it might not be)
    if ((typeof scriptletInput == &quot;undefined&quot;) || (typeof scriptletInput == null) || (scriptletInput == &quot;&quot;) ){  
        // if scriptletInput is undefined, thow an empty exception, so the final scriptletResult will be empty
        throw &quot;&quot;;
    }

    jsObject = JSON.parse(scriptletInput);
    
    var serverMetadata = jsObject.metadata; 

    if (typeof(serverMetadata) != &apos;undefined&apos;){
        scriptletResult = serverMetadata; 
        scriptletResponse = &quot;success&quot;;
    }
} 
catch (e){ 
    if (! (e instanceof SyntaxError))
        scriptletResult = &quot;&quot;+e;
}
</script>
                  <type>RHINO</type>
                </scriptlet>
              </scriptletFilter>
            </filters>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="6ca24a0f-6956-4a3a-89a4-e02eec37b72e">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>serverStatus</contextKey>
          <expression id="77799cf2-6723-4a4d-aa2a-50de5311e6cf">
            <annotation></annotation>
            <name>Result: serverDetails</name>
            <fieldName>serverDetails</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters>
              <scriptletFilter id="088e53f7-946d-4eec-b428-6eeff810e95a">
                <annotation></annotation>
                <name>Scriptlet</name>
                <scriptlet id="5f339d18-ae81-44a2-a4b8-70be37ce9830">
                  <annotation></annotation>
                  <name>default</name>
                  <script>// One-liner to define JSON parser and stringifier.  Minified version of http://www.json.org/json2.js
if(!this.JSON){this.JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;} if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+&apos;-&apos;+ f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;:null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};} var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;} function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);} switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;} v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}} v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+ mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}} if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;} rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);} return str(&apos;&apos;,{&apos;&apos;:value});};} if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}} return reviver.call(holder,key,value);} text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+ (&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});} if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;} throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

// default response
scriptletResponse = &quot;failure&quot;;
scriptletResult = &quot;&quot;;
    
try {
    // check to make sure scriptletInput is defined (if there was a failure, it might not be)
    if ((typeof scriptletInput == &quot;undefined&quot;) || (typeof scriptletInput == null) || (scriptletInput == &quot;&quot;) ){  
        // if scriptletInput is undefined, thow an empty exception, so the final scriptletResult will be empty
        throw &quot;&quot;;
    }

    jsObject = JSON.parse(scriptletInput);
    
    var serverStatus = jsObject.status; 

    if (typeof(serverStatus) != &apos;undefined&apos;){
        scriptletResult = serverStatus; 
        scriptletResponse = &quot;success&quot;;
    }
} 
catch (e){ 
    if (! (e instanceof SyntaxError))
        scriptletResult = &quot;&quot;+e;
}
</script>
                  <type>RHINO</type>
                </scriptlet>
              </scriptletFilter>
            </filters>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="b0e1567b-bcba-41ae-9c50-a69e27039a13">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>serverDetails</contextKey>
          <expression id="f074fa9a-7cf6-45b9-9942-1cf9a5a9b0db">
            <annotation></annotation>
            <name>Result: serverDetails</name>
            <fieldName>serverDetails</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="a8c3cc9c-0368-45eb-af5f-d44db3ad0a44">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>serverImage</contextKey>
          <expression id="26a3871a-03d8-4662-8a79-983ba5e06d62">
            <annotation></annotation>
            <name>Result: serverDetails</name>
            <fieldName>serverDetails</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters>
              <scriptletFilter id="9e08b045-649d-4549-b97e-5f0a267f82e6">
                <annotation></annotation>
                <name>Scriptlet</name>
                <scriptlet id="9b89b5fe-7ca7-4a4f-80de-73cfb446d25a">
                  <annotation></annotation>
                  <name>default</name>
                  <script>// One-liner to define JSON parser and stringifier.  Minified version of http://www.json.org/json2.js
if(!this.JSON){this.JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;} if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+&apos;-&apos;+ f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;:null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};} var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;} function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);} switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;} v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}} v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+ mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}} if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;} rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);} return str(&apos;&apos;,{&apos;&apos;:value});};} if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}} return reviver.call(holder,key,value);} text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+ (&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});} if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;} throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

// default response
scriptletResponse = &quot;failure&quot;;
scriptletResult = &quot;&quot;;
    
try {
    // check to make sure scriptletInput is defined (if there was a failure, it might not be)
    if ((typeof scriptletInput == &quot;undefined&quot;) || (typeof scriptletInput == null) || (scriptletInput == &quot;&quot;) ){  
        // if scriptletInput is undefined, thow an empty exception, so the final scriptletResult will be empty
        throw &quot;&quot;;
    }

    jsObject = JSON.parse(scriptletInput);
    
    var serverImageId = jsObject.image.id; 

    if (typeof(serverImageId) != &apos;undefined&apos;){
        scriptletResult = serverImageId; 
        scriptletResponse = &quot;success&quot;;
    }
} 
catch (e){ 
    if (! (e instanceof SyntaxError))
        scriptletResult = &quot;&quot;+e;
}
</script>
                  <type>RHINO</type>
                </scriptlet>
              </scriptletFilter>
            </filters>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="84d64202-5652-4dbe-bd3f-71017a2c3169">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>serverName</contextKey>
          <expression id="b77ebca4-52c2-4b04-9e1f-afc2f44d452e">
            <annotation></annotation>
            <name>Result: serverDetails</name>
            <fieldName>serverDetails</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters>
              <scriptletFilter id="c09ea9b0-6650-4c47-ae9e-c4d2296f302d">
                <annotation></annotation>
                <name>Scriptlet</name>
                <scriptlet id="fe6af402-2ef2-470d-b1ce-5031154eb8b2">
                  <annotation></annotation>
                  <name>default</name>
                  <script>// One-liner to define JSON parser and stringifier.  Minified version of http://www.json.org/json2.js
if(!this.JSON){this.JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;} if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+&apos;-&apos;+ f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;:null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};} var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;} function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);} switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;} v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}} v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+ mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}} if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;} rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);} return str(&apos;&apos;,{&apos;&apos;:value});};} if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}} return reviver.call(holder,key,value);} text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+ (&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});} if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;} throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

// default response
scriptletResponse = &quot;failure&quot;;
scriptletResult = &quot;&quot;;
    
try {
    // check to make sure scriptletInput is defined (if there was a failure, it might not be)
    if ((typeof scriptletInput == &quot;undefined&quot;) || (typeof scriptletInput == null) || (scriptletInput == &quot;&quot;) ){  
        // if scriptletInput is undefined, thow an empty exception, so the final scriptletResult will be empty
        throw &quot;&quot;;
    }

    jsObject = JSON.parse(scriptletInput);
    
    var serverName = jsObject.name; 

    if (typeof(serverName) != &apos;undefined&apos;){
        scriptletResult = serverName; 
        scriptletResponse = &quot;success&quot;;
    }
} 
catch (e){ 
    if (! (e instanceof SyntaxError))
        scriptletResult = &quot;&quot;+e;
}
</script>
                  <type>RHINO</type>
                </scriptlet>
              </scriptletFilter>
            </filters>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="d9f41265-857f-42d2-be97-cf83570e4af6">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>serverSecurityGroup</contextKey>
          <expression id="750700b3-c04a-4d48-ae94-f865ae2f9d41">
            <annotation></annotation>
            <name>Result: serverDetails</name>
            <fieldName>serverDetails</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters>
              <scriptletFilter id="4a375414-f8cf-4604-af9e-7d947d887343">
                <annotation></annotation>
                <name>Scriptlet</name>
                <scriptlet id="66a64da1-1624-46b7-a3c7-3478a3d7496c">
                  <annotation></annotation>
                  <name>default</name>
                  <script>// One-liner to define JSON parser and stringifier.  Minified version of http://www.json.org/json2.js
if(!this.JSON){this.JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;} if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+&apos;-&apos;+ f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;:null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};} var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;} function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);} switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;} v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}} v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+ mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}} if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;} rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);} return str(&apos;&apos;,{&apos;&apos;:value});};} if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}} return reviver.call(holder,key,value);} text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+ (&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});} if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;} throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

// default response
scriptletResponse = &quot;failure&quot;;
scriptletResult = &quot;&quot;;
    
try {
    // check to make sure scriptletInput is defined (if there was a failure, it might not be)
    if ((typeof scriptletInput == &quot;undefined&quot;) || (typeof scriptletInput == null) || (scriptletInput == &quot;&quot;) ){  
        // if scriptletInput is undefined, thow an empty exception, so the final scriptletResult will be empty
        throw &quot;&quot;;
    }

    jsObject = JSON.parse(scriptletInput);
    
    var serverSecurityGroup = jsObject.metadata.security_groups; 

    if (typeof(serverSecurityGroup) != &apos;undefined&apos;){
        scriptletResult = serverSecurityGroup; 
        scriptletResponse = &quot;success&quot;;
    }
} 
catch (e){ 
    if (! (e instanceof SyntaxError))
        scriptletResult = &quot;&quot;+e;
}
</script>
                  <type>RHINO</type>
                </scriptlet>
              </scriptletFilter>
            </filters>
          </expression>
        </flowVariableAssignment>
      </assignments>
      <throttleSize>0</throttleSize>
    </step>
    <returnStep id="76ff5145-978d-452a-ade6-64e241c31a04">
      <annotation></annotation>
      <name>Resolved : success</name>
      <bounds>
        <x>891.0</x>
        <y>605.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings/>
      <transitions>
        <transition id="ece9f656-1e05-4022-8b49-c9873d718c82">
          <annotation></annotation>
          <name>return</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>76ff5145-978d-452a-ade6-64e241c31a04</refId>
          </destination>
          <source>
            <refId>76ff5145-978d-452a-ade6-64e241c31a04</refId>
          </source>
          <positions/>
        </transition>
      </transitions>
      <properties/>
      <returnStepType>RESOLVED</returnStepType>
      <assignments/>
    </returnStep>
    <step id="ea94f5b2-0371-4240-9101-74ad3a27e0d1">
      <annotation>29b15cae-a108-4206-a3ea-e2b43239d5fd.ea94f5b2-0371-4240-9101-74ad3a27e0d1.description</annotation>
      <name>Get Network Addresses Object</name>
      <bounds>
        <x>382.0</x>
        <y>407.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <staticBinding id="a8cc9234-d600-4951-b6cd-56b3255e93bd">
          <annotation></annotation>
          <fromContextKey>serverResult</fromContextKey>
          <assignFromContext>true</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>object</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="f00d5a39-307b-4ec0-8ff8-31d246bb7802">
          <annotation></annotation>
          <assignFromContext>false</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>key</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value>addresses</value>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="21c8825d-d9d7-4215-b100-0356d90c00cb">
          <annotation></annotation>
          <name>success</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>9d746d6b-a277-415f-88f1-a042a0129f11</refId>
          </destination>
          <source>
            <refId>ea94f5b2-0371-4240-9101-74ad3a27e0d1</refId>
          </source>
          <positions>
            <point>
              <x>525.0</x>
              <y>457.0</y>
            </point>
            <point>
              <x>687.0</x>
              <y>439.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="605a0f81-b89a-4d23-871d-0df084fa936c">
          <annotation></annotation>
          <name>failure</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>4adc2d85-0b6a-4dda-9b47-e91bb833eef7</refId>
          </destination>
          <source>
            <refId>ea94f5b2-0371-4240-9101-74ad3a27e0d1</refId>
          </source>
          <positions>
            <point>
              <x>525.0</x>
              <y>457.0</y>
            </point>
            <point>
              <x>717.0</x>
              <y>93.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>61fc6fd2-7d5c-4d5c-aaa9-71c8250310f2</refId>
      </opRef>
      <assignments>
        <flowVariableAssignment id="1aca1915-8764-4d3f-9b57-93660f62d0db">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>networkAddresses</contextKey>
          <expression id="da2e1f53-a614-466d-9f1b-e5f27b9959a8">
            <annotation></annotation>
            <name>Result Field: Result</name>
            <fieldName>Result</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
      </assignments>
      <throttleSize>0</throttleSize>
    </step>
    <step id="01946886-fca2-4f61-895f-4578f8600bdf">
      <annotation>29b15cae-a108-4206-a3ea-e2b43239d5fd.01946886-fca2-4f61-895f-4578f8600bdf.description</annotation>
      <name>Get Floating IP from Result</name>
      <bounds>
        <x>877.0</x>
        <y>400.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <staticBinding id="5b519746-bad7-42e8-be3e-b4071a029a2c">
          <annotation></annotation>
          <fromContextKey>networkDetails</fromContextKey>
          <assignFromContext>true</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>object</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="74ae9354-4238-4260-8c2c-f6b9ac6db26d">
          <annotation></annotation>
          <assignFromContext>false</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>key</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value>addr</value>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="3e437686-bada-4cfc-a9a1-113c57d2498c">
          <annotation></annotation>
          <name>success</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>76ff5145-978d-452a-ade6-64e241c31a04</refId>
          </destination>
          <source>
            <refId>01946886-fca2-4f61-895f-4578f8600bdf</refId>
          </source>
          <positions>
            <point>
              <x>1020.0</x>
              <y>450.0</y>
            </point>
            <point>
              <x>1040.0</x>
              <y>615.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="19381b03-8a1e-4ee4-a628-23cdbb1882a7">
          <annotation></annotation>
          <name>failure</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>4adc2d85-0b6a-4dda-9b47-e91bb833eef7</refId>
          </destination>
          <source>
            <refId>01946886-fca2-4f61-895f-4578f8600bdf</refId>
          </source>
          <positions>
            <point>
              <x>1020.0</x>
              <y>450.0</y>
            </point>
            <point>
              <x>717.0</x>
              <y>93.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>61fc6fd2-7d5c-4d5c-aaa9-71c8250310f2</refId>
      </opRef>
      <assignments>
        <flowVariableAssignment id="28edf8a4-1b10-4cda-91fa-3e0e618aadf1">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>floatingIP</contextKey>
          <expression id="d6e192da-eb95-480c-812c-d778df3a7c96">
            <annotation></annotation>
            <name>Result Field: Result</name>
            <fieldName>Result</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="44adb045-877e-4b23-a09a-2bd845d9ae23">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>FailureMessage</contextKey>
          <expression id="b9fd094c-7601-44ad-8567-f5a222ba6cec">
            <annotation></annotation>
            <name>Result Field: FailureMessage</name>
            <fieldName>FailureMessage</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
      </assignments>
      <throttleSize>0</throttleSize>
    </step>
    <step id="6bf2654e-05ee-489f-a8c5-b9782de862c6">
      <annotation>29b15cae-a108-4206-a3ea-e2b43239d5fd.6bf2654e-05ee-489f-a8c5-b9782de862c6.description</annotation>
      <name>Get Image Details</name>
      <bounds>
        <x>50.0</x>
        <y>404.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <userInputBinding id="01146693-6a3d-49d1-bf6a-29e0263b2007">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>computeEndpoint</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
          <prompt></prompt>
          <isMultiSelect>false</isMultiSelect>
          <sourceDelimiter>|</sourceDelimiter>
        </userInputBinding>
        <userInputBinding id="14aa26c8-5f5b-4b10-9e50-daa0981960bf">
          <annotation></annotation>
          <fromContextKey>serverImage</fromContextKey>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>imageId</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
          <prompt></prompt>
          <isMultiSelect>false</isMultiSelect>
          <sourceDelimiter>|</sourceDelimiter>
        </userInputBinding>
        <userInputBinding id="9345c8ab-a743-42a9-b6ff-b385cb612016">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>authToken</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
          <prompt></prompt>
          <isMultiSelect>false</isMultiSelect>
          <sourceDelimiter>|</sourceDelimiter>
        </userInputBinding>
        <staticBinding id="a84ebee6-ac38-47bc-971f-f2107ed6b7ca">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>username</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="02a790fc-d243-4a47-9b81-be9401996397">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>ENCRYPTED</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>password</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="7c47bac0-83f2-4b37-9a35-2ac7165d6dd8">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>authType</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="028b5651-a75c-4ed6-a0a6-fe1872f8fc5e">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>timeout</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="684d67ed-d477-4c2b-94d1-0c913face969">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>useCookies</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="701eea51-802d-47dc-b96e-547bdcb045a4">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>followRedirects</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="18b8bc6e-547d-4be2-882b-77dd56ca055b">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>proxy</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="562a6f03-14d4-41b7-b348-991d212fc480">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>proxyPort</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="096a648d-3f2e-4f81-8bfa-85b42973f1de">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>proxyUsername</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="aefa3aac-f9b3-40e8-85f2-a48c228fc338">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>ENCRYPTED</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>proxyPassword</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="c6f555a9-54a9-427f-84b4-edf47dbcfe89">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>encodeURL</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="18b45c72-bda7-4fcf-8cab-5099b7e99eab">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>userAgent</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="0147ef9f-496e-4e4f-98b5-ef0dda6c0a68">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>characterSet</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="7a0bbcc5-15a0-42b8-b3ca-9a36c513bdd4">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>trustAllRoots</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="f3221fb0-83b2-4e3e-a652-08ef4f15bb4a">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>keystore</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="3c820d14-7850-48a5-a203-eeef1421cdf1">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>ENCRYPTED</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>keystorePassword</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="2fe7b429-45dd-4b2d-83c8-52db9d6bbc0b">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>trustKeystore</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="cbcbade5-de9f-4782-90eb-673bc4b957e0">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>ENCRYPTED</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>trustPassword</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="aa517c27-db03-4380-b3da-7dbecf0999e1">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>kerberosConfFile</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="a49e3e36-3458-465b-bece-39c1321a24b1">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>socketTimeout</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="c1041e9a-a92e-485b-8b5a-fee49b7e5482">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>headerNamesList</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="44804296-54b4-432c-97e7-bc67554861a1">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>headerValuesList</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="69e3fc0f-04d1-486b-8832-54b842c42fdd">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>queryNamesList</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="caffe484-b853-41aa-af1b-a3001b7f50ec">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>queryValuesList</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="1435a57f-39ef-4759-bbb3-14773f2d800d">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>delimiter</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="da60c5dd-beae-4d6e-a94b-cd819c433efc">
          <annotation></annotation>
          <assignFromContext>false</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>errorMessage</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="74743a4d-ba6f-4331-9198-efe44f5bd96e">
          <annotation></annotation>
          <name>success</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>0208212d-4783-4753-9563-2335317dafab</refId>
          </destination>
          <source>
            <refId>6bf2654e-05ee-489f-a8c5-b9782de862c6</refId>
          </source>
          <positions>
            <point>
              <x>272.0</x>
              <y>370.0</y>
            </point>
            <point>
              <x>402.0</x>
              <y>379.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="55007c21-6677-4f21-8962-e40c010635dd">
          <annotation></annotation>
          <name>failure</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>4adc2d85-0b6a-4dda-9b47-e91bb833eef7</refId>
          </destination>
          <source>
            <refId>6bf2654e-05ee-489f-a8c5-b9782de862c6</refId>
          </source>
          <positions>
            <point>
              <x>100.0</x>
              <y>438.0</y>
            </point>
            <point>
              <x>624.0</x>
              <y>77.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>0056d039-5ac0-4fb2-ae0d-c3cfca36ad85</refId>
      </opRef>
      <assignments>
        <flowVariableAssignment id="c3a538a7-899d-4d36-ae7a-d1b03a56c8d2">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>FailureMessage</contextKey>
          <expression id="379cd571-d3b7-4597-bf0a-e6f8dbce869a">
            <annotation></annotation>
            <name>Result Field: FailureMessage</name>
            <fieldName>FailureMessage</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="745bb93b-9f24-4077-93b5-de3e85bd0913">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>imageId</contextKey>
          <expression id="5101014d-4626-4d23-866d-c494a47a9488">
            <annotation></annotation>
            <name>Input: imageId</name>
            <fieldName>imageId</fieldName>
            <sourceType>INPUT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="4ff6c8da-ec2e-4eea-a13d-7cc626c0c740">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>imageName</contextKey>
          <expression id="fc81572b-cd23-4fe9-b12e-511b044231af">
            <annotation></annotation>
            <name>Result: imageDetails</name>
            <fieldName>imageDetails</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters>
              <scriptletFilter id="26ea12e9-570b-47e7-9801-dbcb3cced15a">
                <annotation></annotation>
                <name>Scriptlet</name>
                <scriptlet id="13197cd1-49a9-4d47-a4f0-bd5a4bf3d046">
                  <annotation></annotation>
                  <name>default</name>
                  <script>// One-liner to define JSON parser and stringifier.  Minified version of http://www.json.org/json2.js
if(!this.JSON){this.JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;} if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+&apos;-&apos;+ f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;:null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};} var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;} function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);} switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;} v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}} v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+ mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}} if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;} rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);} return str(&apos;&apos;,{&apos;&apos;:value});};} if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}} return reviver.call(holder,key,value);} text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+ (&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});} if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;} throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

// default response
scriptletResponse = &quot;failure&quot;;
scriptletResult = &quot;invalid response from compute server&quot;;
    
try {
    // check to make sure scriptletInput is defined (if there was a failure, it might not be)
    if (typeof scriptletInput == &quot;undefined&quot;){ 
        // if scriptletInput is undefined, thow an empty exception, so the final scriptletResult will be empty
        throw &quot;&quot;;
    }

    jsObject = JSON.parse(scriptletInput);
    
    var name = jsObject.name; 

    if (typeof(name) != &apos;undefined&apos;){
        scriptletResult = name; 
        scriptletResponse = &quot;success&quot;;
    }
} 
catch (e){ 
    if (! (e instanceof SyntaxError))
        scriptletResult = &quot;&quot;+e;
}
</script>
                  <type>RHINO</type>
                </scriptlet>
              </scriptletFilter>
            </filters>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="d541494f-1ad2-4797-afe4-b50cf042c533">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>errorMessage</contextKey>
          <expression id="1c0ec137-a1e0-4dc8-8a87-21ac020552fd">
            <annotation></annotation>
            <name>Result Field: FailureMessage</name>
            <fieldName>FailureMessage</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="f6d16007-e724-4221-acc1-36cdb6ad34e0">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>computeEndpoint</contextKey>
          <expression id="c5f754db-748f-461d-ab52-1c37d6854e55">
            <annotation></annotation>
            <name>Input: computeEndpoint</name>
            <fieldName>computeEndpoint</fieldName>
            <sourceType>INPUT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="265ddabd-bf8b-4118-8c43-5c072f069321">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>authToken</contextKey>
          <expression id="dbbc75a3-76ab-4905-a81d-b825b5992702">
            <annotation></annotation>
            <name>Input: authToken</name>
            <fieldName>authToken</fieldName>
            <sourceType>INPUT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="ddb2fdfd-e10f-4b9f-a7f2-716f5ba47c8b">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>imageDetails</contextKey>
          <expression id="c92a5d9a-c2fa-47c6-99e5-ab88f372df0d">
            <annotation></annotation>
            <name>Result: imageDetails</name>
            <fieldName>imageDetails</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
      </assignments>
      <throttleSize>0</throttleSize>
    </step>
    <step id="9d746d6b-a277-415f-88f1-a042a0129f11">
      <annotation>29b15cae-a108-4206-a3ea-e2b43239d5fd.9d746d6b-a277-415f-88f1-a042a0129f11.description</annotation>
      <name>Get Addresses Array</name>
      <bounds>
        <x>557.0</x>
        <y>407.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <staticBinding id="ee66a599-400b-4943-aec6-d11d7cd8b2f5">
          <annotation></annotation>
          <fromContextKey>networkAddresses</fromContextKey>
          <assignFromContext>true</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>object</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="c82898ef-8b8b-475b-9760-afb021bf55c7">
          <annotation></annotation>
          <fromContextKey>pnetwork</fromContextKey>
          <assignFromContext>true</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>key</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="9b328cff-9e18-4711-9c37-eccf562d7766">
          <annotation></annotation>
          <name>failure</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>4adc2d85-0b6a-4dda-9b47-e91bb833eef7</refId>
          </destination>
          <source>
            <refId>9d746d6b-a277-415f-88f1-a042a0129f11</refId>
          </source>
          <positions>
            <point>
              <x>687.0</x>
              <y>439.0</y>
            </point>
            <point>
              <x>717.0</x>
              <y>93.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="77b68c02-a68d-4257-acb1-de189f4ea79d">
          <annotation></annotation>
          <name>success</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>b5bb8c8b-f8a3-42fa-8822-cb8372ee12ac</refId>
          </destination>
          <source>
            <refId>9d746d6b-a277-415f-88f1-a042a0129f11</refId>
          </source>
          <positions>
            <point>
              <x>700.0</x>
              <y>457.0</y>
            </point>
            <point>
              <x>859.0</x>
              <y>444.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>61fc6fd2-7d5c-4d5c-aaa9-71c8250310f2</refId>
      </opRef>
      <assignments>
        <flowVariableAssignment id="5aa1bc8b-1d6c-4370-8ae0-82e53ea8e167">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>addressArray</contextKey>
          <expression id="e882cde9-e547-48ee-8f24-9b11c01de9f1">
            <annotation></annotation>
            <name>Result Field: Result</name>
            <fieldName>Result</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
      </assignments>
      <throttleSize>0</throttleSize>
    </step>
    <step id="b5bb8c8b-f8a3-42fa-8822-cb8372ee12ac">
      <annotation>29b15cae-a108-4206-a3ea-e2b43239d5fd.b5bb8c8b-f8a3-42fa-8822-cb8372ee12ac.description</annotation>
      <name>Array Iterator</name>
      <bounds>
        <x>724.0</x>
        <y>402.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <staticBinding id="f713830d-be08-4ba2-aab6-b0fa9164d8b3">
          <annotation></annotation>
          <fromContextKey>addressArray</fromContextKey>
          <assignFromContext>true</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>array</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="36b385fa-ca99-42b6-9659-4afd008372dc">
          <annotation></annotation>
          <name>has more</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>has more</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>01946886-fca2-4f61-895f-4578f8600bdf</refId>
          </destination>
          <source>
            <refId>b5bb8c8b-f8a3-42fa-8822-cb8372ee12ac</refId>
          </source>
          <positions>
            <point>
              <x>867.0</x>
              <y>452.0</y>
            </point>
            <point>
              <x>1020.0</x>
              <y>450.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="ccf2e304-4d0e-4fea-a2d0-687a3a3b3568">
          <annotation></annotation>
          <name>failure</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>4adc2d85-0b6a-4dda-9b47-e91bb833eef7</refId>
          </destination>
          <source>
            <refId>b5bb8c8b-f8a3-42fa-8822-cb8372ee12ac</refId>
          </source>
          <positions>
            <point>
              <x>867.0</x>
              <y>452.0</y>
            </point>
            <point>
              <x>773.9357453852896</x>
              <y>371.00003175889634</y>
            </point>
            <point>
              <x>670.1990679768224</x>
              <y>122.72358382796497</y>
            </point>
            <point>
              <x>717.0</x>
              <y>93.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="6d36c3a3-927a-4e80-9a00-5ee3cab5a3d2">
          <annotation></annotation>
          <name>no more</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>no more</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>4adc2d85-0b6a-4dda-9b47-e91bb833eef7</refId>
          </destination>
          <source>
            <refId>b5bb8c8b-f8a3-42fa-8822-cb8372ee12ac</refId>
          </source>
          <positions>
            <point>
              <x>867.0</x>
              <y>452.0</y>
            </point>
            <point>
              <x>717.0</x>
              <y>93.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>50efc8cb-f1e7-4123-984c-979039f22f2c</refId>
      </opRef>
      <assignments>
        <flowVariableAssignment id="62f32c5f-a350-493a-90a8-c4bc9b93a9c5">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>networkDetails</contextKey>
          <expression id="3592bf7f-b14b-4f58-8b90-95dfd2507f46">
            <annotation></annotation>
            <name>Result Field: Result</name>
            <fieldName>Result</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
      </assignments>
      <throttleSize>0</throttleSize>
    </step>
    <step id="55b5dc84-9622-4283-8829-4596d85c03c5">
      <annotation>29b15cae-a108-4206-a3ea-e2b43239d5fd.55b5dc84-9622-4283-8829-4596d85c03c5.description</annotation>
      <name>Get Flavor Details</name>
      <bounds>
        <x>50.0</x>
        <y>206.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <userInputBinding id="f9a5da84-04a5-4a5a-bfe7-b8958646ca32">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>computeEndpoint</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
          <prompt></prompt>
          <isMultiSelect>false</isMultiSelect>
          <sourceDelimiter>|</sourceDelimiter>
        </userInputBinding>
        <userInputBinding id="f304b651-88cf-42cb-8da3-40b0a26b94af">
          <annotation></annotation>
          <fromContextKey>serverFlavor</fromContextKey>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>flavorId</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
          <prompt></prompt>
          <isMultiSelect>false</isMultiSelect>
          <sourceDelimiter>|</sourceDelimiter>
        </userInputBinding>
        <userInputBinding id="c56ab53b-7ddb-4ad3-b746-ad51b5d255f9">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>authToken</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <record>false</record>
          <prompt></prompt>
          <isMultiSelect>false</isMultiSelect>
          <sourceDelimiter>|</sourceDelimiter>
        </userInputBinding>
        <staticBinding id="bb371b0f-0f45-49d4-901b-3f19ffd84f99">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>username</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="1390472f-b65c-4f0d-8d24-4f4f83f28d4b">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>ENCRYPTED</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>password</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="9a314cdb-8cf9-41a7-9927-0c6a2830dd0f">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>authType</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="fcc26e0b-4979-4f88-8522-37e194cfec33">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>timeout</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="d59134c2-43d6-46c9-83ef-3984eb9cd13a">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>useCookies</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="cce98de0-14cf-4154-99e6-15a4c65d55a4">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>followRedirects</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="3709821c-dfcd-462a-b826-f15ea5cf585b">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>proxy</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="571e7070-a253-4d91-8455-a0490238f42c">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>proxyPort</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="872ad514-6318-4ea2-8469-e46565a01f2f">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>proxyUsername</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="21627b1b-906c-4504-932b-3b001e2a512e">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>ENCRYPTED</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>proxyPassword</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="7795a0c7-7ef9-4b4c-a344-35ba2c12d0a8">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>encodeURL</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="b34bb03d-b442-47f3-a5f3-f2c2f8ef11e0">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>userAgent</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="cd5eefe4-7a48-4540-b1ba-63ff443ad631">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>characterSet</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="2c8f4ae3-b60e-4075-ba45-f29bc5b7a0a5">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>trustAllRoots</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="ef091c3a-5c35-43a6-8238-071194a14ceb">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>keystore</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="a4d5c2d5-846d-452e-b64a-75da0b80c02a">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>ENCRYPTED</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>keystorePassword</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="74aba26a-b88b-499c-a3bc-54a4a844dc66">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>trustKeystore</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="1aaf46c5-188c-4597-b941-7aa04c079403">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>ENCRYPTED</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>trustPassword</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="a1333c2b-5b4d-4bfc-9729-e9385b651039">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>kerberosConfFile</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="dcefc9cc-fbf5-4d42-87e1-0fe4acb138ff">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>socketTimeout</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="ecc3b608-48db-40ae-ab51-ed8e4a83faa0">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>headerNamesList</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="15106e0b-2576-4217-95af-d22cf52618ba">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>headerValuesList</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="50343db7-a5bb-4754-a3e2-235420d4de25">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>queryNamesList</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="8bf5dbde-ad4e-4e29-a1bc-9feb32ebe8cb">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>queryValuesList</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="f25a215c-221a-4039-9c9d-182844bed40b">
          <annotation></annotation>
          <assignFromContext>true</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>delimiter</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="95c2194c-7e96-48df-b9ac-9cd21095a7c1">
          <annotation></annotation>
          <assignFromContext>false</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>false</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>errorMessage</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="6219e1b3-8348-4d39-b025-1d0c39794d57">
          <annotation></annotation>
          <name>success</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>6bf2654e-05ee-489f-a8c5-b9782de862c6</refId>
          </destination>
          <source>
            <refId>55b5dc84-9622-4283-8829-4596d85c03c5</refId>
          </source>
          <positions>
            <point>
              <x>277.0</x>
              <y>226.0</y>
            </point>
            <point>
              <x>272.0</x>
              <y>370.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>607.1238318736814</x>
            <y>1.4319187510473725</y>
          </labelPosition>
        </transition>
        <transition id="cf093435-57f1-4e25-a5f8-2c04e7a5b1fb">
          <annotation></annotation>
          <name>failure</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>4adc2d85-0b6a-4dda-9b47-e91bb833eef7</refId>
          </destination>
          <source>
            <refId>55b5dc84-9622-4283-8829-4596d85c03c5</refId>
          </source>
          <positions>
            <point>
              <x>100.0</x>
              <y>240.0</y>
            </point>
            <point>
              <x>624.0</x>
              <y>77.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>ecd74af5-c0af-461f-b887-f0acd87d1409</refId>
      </opRef>
      <assignments>
        <flowVariableAssignment id="16acd65d-cff6-425f-b31c-1947b8479792">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>flavorDetails</contextKey>
          <expression id="6f6f15d5-6d20-41da-9084-13577be87d8f">
            <annotation></annotation>
            <name>Result: flavorDetails</name>
            <fieldName>flavorDetails</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="b6157c65-bddf-40a7-85ef-8d5fcdb9114d">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>authToken</contextKey>
          <expression id="7d8edc1b-fceb-4988-84ef-e32fed59b5fd">
            <annotation></annotation>
            <name>Input: authToken</name>
            <fieldName>authToken</fieldName>
            <sourceType>INPUT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="dcd6415a-b95f-4099-a317-734d1aa83d6b">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>ramInGB</contextKey>
          <expression id="8f94cbb3-b853-4b8a-b896-c7b6b6c4cf6d">
            <annotation></annotation>
            <name>Result: flavorDetails</name>
            <fieldName>flavorDetails</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters>
              <scriptletFilter id="feff9a5a-ac17-4b98-9633-45b8dd7f906b">
                <annotation></annotation>
                <name>Scriptlet</name>
                <scriptlet id="f79c934f-01f0-415f-9772-d291241b808d">
                  <annotation></annotation>
                  <name>default</name>
                  <script>// One-liner to define JSON parser and stringifier.  Minified version of http://www.json.org/json2.js
if(!this.JSON){this.JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;} if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+&apos;-&apos;+ f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;:null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};} var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;} function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);} switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;} v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}} v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+ mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}} if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;} rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);} return str(&apos;&apos;,{&apos;&apos;:value});};} if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}} return reviver.call(holder,key,value);} text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+ (&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});} if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;} throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

// default response
scriptletResponse = &quot;failure&quot;;
scriptletResult = &quot;invalid response from compute server&quot;;
    
try {
    // check to make sure scriptletInput is defined (if there was a failure, it might not be)
    if (typeof scriptletInput == &quot;undefined&quot;){ 
        // if scriptletInput is undefined, thow an empty exception, so the final scriptletResult will be empty
        throw &quot;&quot;;
    }

    jsObject = JSON.parse(scriptletInput);
    
    var ram = jsObject.ram; 

    if (typeof(ram) != &apos;undefined&apos;){      
        scriptletResult = ram / 1024;  // ram comes in MB so converting to GB
        scriptletResponse = &quot;success&quot;;
    }
} 
catch (e){ 
    if (! (e instanceof SyntaxError))
        scriptletResult = &quot;&quot;+e;
}
</script>
                  <type>RHINO</type>
                </scriptlet>
              </scriptletFilter>
            </filters>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="953e23c9-c1b2-4f59-b58b-42dd241e63a7">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>flavorRef</contextKey>
          <expression id="244d913d-b39c-4684-8ac1-87999b17965c">
            <annotation></annotation>
            <name>Input: flavorId</name>
            <fieldName>flavorId</fieldName>
            <sourceType>INPUT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="cd4816fb-5761-4916-981a-7d6be77ade51">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>FailureMessage</contextKey>
          <expression id="2285bd63-57e9-4ec0-a221-bb3c2bea1d3d">
            <annotation></annotation>
            <name>Result Field: FailureMessage</name>
            <fieldName>FailureMessage</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="75729779-465b-4514-b93c-9d644893efde">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_VARIABLE</assignmentTargetType>
          <contextKey>errorMessage</contextKey>
          <expression id="891764f7-1890-46ef-b7a4-729080589e7a">
            <annotation></annotation>
            <name>Result Field: FailureMessage</name>
            <fieldName>FailureMessage</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="18ea9888-98f7-4f98-acb9-52c9acc53214">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>flavorName</contextKey>
          <expression id="8085163e-19e1-4b2e-a1a0-0cc93e3c5a7a">
            <annotation></annotation>
            <name>Result: flavorDetails</name>
            <fieldName>flavorDetails</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters>
              <scriptletFilter id="414aa0fa-0b3f-4056-841c-45033ee685eb">
                <annotation></annotation>
                <name>Scriptlet</name>
                <scriptlet id="14b7a405-94f8-48e1-aea2-08bca3299887">
                  <annotation></annotation>
                  <name>default</name>
                  <script>// One-liner to define JSON parser and stringifier.  Minified version of http://www.json.org/json2.js
if(!this.JSON){this.JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;} if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+&apos;-&apos;+ f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;:null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};} var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;} function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);} switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;} v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}} v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+ mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}} if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;} rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);} return str(&apos;&apos;,{&apos;&apos;:value});};} if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}} return reviver.call(holder,key,value);} text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+ (&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});} if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;} throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

// default response
scriptletResponse = &quot;failure&quot;;
scriptletResult = &quot;invalid response from compute server&quot;;
    
try {
    // check to make sure scriptletInput is defined (if there was a failure, it might not be)
    if (typeof scriptletInput == &quot;undefined&quot;){ 
        // if scriptletInput is undefined, thow an empty exception, so the final scriptletResult will be empty
        throw &quot;&quot;;
    }

    jsObject = JSON.parse(scriptletInput);
    
    var name = jsObject.name; 

    if (typeof(name) != &apos;undefined&apos;){
        scriptletResult = name; 
        scriptletResponse = &quot;success&quot;;
    }
} 
catch (e){ 
    if (! (e instanceof SyntaxError))
        scriptletResult = &quot;&quot;+e;
}
</script>
                  <type>RHINO</type>
                </scriptlet>
              </scriptletFilter>
            </filters>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="b0238f5c-a818-436c-92ef-d5b9e55019f3">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>hardDiskInGB</contextKey>
          <expression id="39838db7-a1fa-4b52-a43d-0efb6912ca03">
            <annotation></annotation>
            <name>Result: flavorDetails</name>
            <fieldName>flavorDetails</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters>
              <scriptletFilter id="ee2e60d1-2f30-46a5-86b3-a55805864891">
                <annotation></annotation>
                <name>Scriptlet</name>
                <scriptlet id="32756502-f617-4d3a-a2c6-3198a4c05a47">
                  <annotation></annotation>
                  <name>default</name>
                  <script>// One-liner to define JSON parser and stringifier.  Minified version of http://www.json.org/json2.js
if(!this.JSON){this.JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;} if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+&apos;-&apos;+ f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;:null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};} var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;} function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);} switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;} v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}} v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+ mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}} if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;} rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);} return str(&apos;&apos;,{&apos;&apos;:value});};} if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}} return reviver.call(holder,key,value);} text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+ (&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});} if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;} throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

// default response
scriptletResponse = &quot;failure&quot;;
scriptletResult = &quot;invalid response from compute server&quot;;
    
try {
    // check to make sure scriptletInput is defined (if there was a failure, it might not be)
    if (typeof scriptletInput == &quot;undefined&quot;){ 
        // if scriptletInput is undefined, thow an empty exception, so the final scriptletResult will be empty
        throw &quot;&quot;;
    }

    jsObject = JSON.parse(scriptletInput);
    
    var disk = jsObject.disk; 

    if (typeof(disk) != &apos;undefined&apos;){
        scriptletResult = disk; 
        scriptletResponse = &quot;success&quot;;
    }
} 
catch (e){ 
    if (! (e instanceof SyntaxError))
        scriptletResult = &quot;&quot;+e;
}
</script>
                  <type>RHINO</type>
                </scriptlet>
              </scriptletFilter>
            </filters>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="fab5206c-a608-4b2b-b651-6a74ecf716e3">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>vcpus</contextKey>
          <expression id="e1678eaf-6074-4520-89da-680f32a038ae">
            <annotation></annotation>
            <name>Result: flavorDetails</name>
            <fieldName>flavorDetails</fieldName>
            <sourceType>AVAILABLE_RESULT</sourceType>
            <filters>
              <scriptletFilter id="6dd195bc-dcbb-4a54-b8cd-a431a58428ea">
                <annotation></annotation>
                <name>Scriptlet</name>
                <scriptlet id="00d4a8c2-3b11-4338-b228-db466e3bab31">
                  <annotation></annotation>
                  <name>default</name>
                  <script>// One-liner to define JSON parser and stringifier.  Minified version of http://www.json.org/json2.js
if(!this.JSON){this.JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;} if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+&apos;-&apos;+ f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;:null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};} var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;} function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);} switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;} v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}} v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+ mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}} if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;} rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);} return str(&apos;&apos;,{&apos;&apos;:value});};} if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}} return reviver.call(holder,key,value);} text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+ (&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});} if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;} throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

// default response
scriptletResponse = &quot;failure&quot;;
scriptletResult = &quot;invalid response from compute server&quot;;
    
try {
    // check to make sure scriptletInput is defined (if there was a failure, it might not be)
    if (typeof scriptletInput == &quot;undefined&quot;){ 
        // if scriptletInput is undefined, thow an empty exception, so the final scriptletResult will be empty
        throw &quot;&quot;;
    }

    jsObject = JSON.parse(scriptletInput);
    
    var vcpus = jsObject.vcpus; 

    if (typeof(vcpus) != &apos;undefined&apos;){
        scriptletResult = vcpus; 
        scriptletResponse = &quot;success&quot;;
    }
} 
catch (e){ 
    if (! (e instanceof SyntaxError))
        scriptletResult = &quot;&quot;+e;
}
</script>
                  <type>RHINO</type>
                </scriptlet>
              </scriptletFilter>
            </filters>
          </expression>
        </flowVariableAssignment>
      </assignments>
      <throttleSize>0</throttleSize>
    </step>
    <returnStep id="4adc2d85-0b6a-4dda-9b47-e91bb833eef7">
      <annotation></annotation>
      <name>Error : failure</name>
      <bounds>
        <x>574.0</x>
        <y>43.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings/>
      <transitions>
        <transition id="434d78a3-8a5f-4e5c-a8f4-baad1a13fc13">
          <annotation></annotation>
          <name>return</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>4adc2d85-0b6a-4dda-9b47-e91bb833eef7</refId>
          </destination>
          <source>
            <refId>4adc2d85-0b6a-4dda-9b47-e91bb833eef7</refId>
          </source>
          <positions/>
        </transition>
      </transitions>
      <properties/>
      <returnStepType>ERROR</returnStepType>
      <assignments/>
    </returnStep>
    <step id="0208212d-4783-4753-9563-2335317dafab">
      <annotation>29b15cae-a108-4206-a3ea-e2b43239d5fd.0208212d-4783-4753-9563-2335317dafab.description</annotation>
      <name>Get Metadata from Result</name>
      <bounds>
        <x>226.0</x>
        <y>404.0</y>
      </bounds>
      <layer>-1</layer>
      <hideInbound>false</hideInbound>
      <addResultToRunContext>false</addResultToRunContext>
      <isCriticalStep>false</isCriticalStep>
      <isNonBlocking>false</isNonBlocking>
      <isParallelStep>false</isParallelStep>
      <isSingleResponse>false</isSingleResponse>
      <recordInHistory>false</recordInHistory>
      <recordRawOutput>true</recordRawOutput>
      <recordPrimaryOutput>true</recordPrimaryOutput>
      <checkPointStep>true</checkPointStep>
      <historyCheckPointStep>true</historyCheckPointStep>
      <scriptResultStep>false</scriptResultStep>
      <userPrompt></userPrompt>
      <bindings>
        <staticBinding id="3e0c2c78-232c-4de1-a603-369b26cfb332">
          <annotation></annotation>
          <fromContextKey>serverResult</fromContextKey>
          <assignFromContext>true</assignFromContext>
          <assignToContext>false</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>object</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value></value>
          <record>false</record>
        </staticBinding>
        <staticBinding id="ba3ba812-7181-4d85-988c-35d761449587">
          <annotation></annotation>
          <assignFromContext>false</assignFromContext>
          <assignToContext>true</assignToContext>
          <inputType>STRING</inputType>
          <isList>false</isList>
          <required>true</required>
          <isPersisted>true</isPersisted>
          <inputSymbol>key</inputSymbol>
          <listDelimiter>,</listDelimiter>
          <value>metadata</value>
          <record>false</record>
        </staticBinding>
      </bindings>
      <transitions>
        <transition id="2ffe5ba9-519c-4b2e-80c9-461f274831cf">
          <annotation></annotation>
          <name>failure</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>failure</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>4adc2d85-0b6a-4dda-9b47-e91bb833eef7</refId>
          </destination>
          <source>
            <refId>0208212d-4783-4753-9563-2335317dafab</refId>
          </source>
          <positions>
            <point>
              <x>402.0</x>
              <y>379.0</y>
            </point>
            <point>
              <x>654.0</x>
              <y>98.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
        <transition id="4a7cca24-bfa2-4910-ab2e-dd92f98af7b9">
          <annotation></annotation>
          <name>success</name>
          <command>NEXT</command>
          <linkMode>false</linkMode>
          <responseSymbol>success</responseSymbol>
          <shouldHandoff>false</shouldHandoff>
          <transitionValue>0.0</transitionValue>
          <destination>
            <refId>ea94f5b2-0371-4240-9101-74ad3a27e0d1</refId>
          </destination>
          <source>
            <refId>0208212d-4783-4753-9563-2335317dafab</refId>
          </source>
          <positions>
            <point>
              <x>369.0</x>
              <y>454.0</y>
            </point>
            <point>
              <x>530.0</x>
              <y>441.0</y>
            </point>
          </positions>
          <labelPosition>
            <x>333.0</x>
            <y>0.0</y>
          </labelPosition>
        </transition>
      </transitions>
      <properties/>
      <opRef>
        <refId>61fc6fd2-7d5c-4d5c-aaa9-71c8250310f2</refId>
      </opRef>
      <assignments>
        <flowVariableAssignment id="6682d48f-f274-4195-9077-2053b126f42d">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>FailureMessage</contextKey>
          <expression id="f6ead680-55d3-4599-b0b5-2b575e264f96">
            <annotation></annotation>
            <name>Result Field: FailureMessage</name>
            <fieldName>FailureMessage</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
        <flowVariableAssignment id="bc56341b-4169-4092-a357-05bd1dbe92e7">
          <annotation></annotation>
          <name>assignment</name>
          <action>OVERWRITE</action>
          <assignmentTargetType>FLOW_OUTPUT_FIELD</assignmentTargetType>
          <contextKey>serverMetadata</contextKey>
          <expression id="d80f6577-0a6f-4fe7-9b7d-c452491ea976">
            <annotation></annotation>
            <name>Result Field: Result</name>
            <fieldName>Result</fieldName>
            <sourceType>RAWRESULT</sourceType>
            <filters/>
          </expression>
        </flowVariableAssignment>
      </assignments>
      <throttleSize>0</throttleSize>
    </step>
  </steps>
  <startSteps>e84e3ecb-f576-4d06-b7a8-452afc99aa0d</startSteps>
</flow>